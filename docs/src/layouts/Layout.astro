<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/x-icon" href="/assets/favicon.ico" />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/assets/favicon-16.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/assets/favicon-32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="48x48"
      href="/assets/favicon-48.png"
    />
    <title>Blankie - {{ page.title }}</title>
    <!-- Primary Meta Tags -->
    <meta name="title" content="Blankie - {{ page.title }}" />
    <meta name="description" content="Ambient sound mixer for macOS." />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://blankie.rest{{ page.url }}" />
    <meta property="og:title" content="Blankie - {{ page.title }}" />
    <meta property="og:description" content="Ambient sound mixer for macOS." />
    <meta
      property="og:image"
      content="https://blankie.rest/assets/social.png"
    />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:width" content="1280" />
    <meta property="og:image:height" content="640" />
    <meta property="og:site_name" content="Blankie" />
    <meta property="og:locale" content="en_US" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://blankie.rest{{ page.url }}" />
    <meta property="twitter:title" content="Blankie - {{ page.title }}" />
    <meta
      property="twitter:description"
      content="Ambient sound mixer for macOS."
    />
    <meta
      property="twitter:image"
      content="https://blankie.rest/assets/social.png"
    />

    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              "primary-blue": "#2997ff",
              "deep-blue": "#0066cc",
              "dark-gray": "#1a1a1a",
              "light-gray": "#f0f0f0",
              "coming-soon": "#71717a",
              "open-source-green": "#22c55e",
            },
            backgroundImage: {
              "bg-gradient-light":
                "linear-gradient(180deg, #f0f0f0 0%, #ffffff 100%)",
              "bg-gradient-dark":
                "linear-gradient(180deg, #1a1a1a 0%, #0a0a0a 100%)",
            },
            textColor: {
              skin: {
                base: "var(--color-text-base)",
                muted: "var(--color-text-muted)",
                inverted: "var(--color-text-inverted)",
              },
            },
            backgroundColor: {
              skin: {
                fill: "var(--color-bg-fill)",
                card: "var(--color-bg-card)",
              },
            },
          },
        },
      };
    </script>
    <style>
      :root {
        --color-text-base: #333333;
        --color-text-muted: #555555;
        --color-text-inverted: #ffffff;
        --color-bg-fill: white;
        --color-bg-card: rgba(255, 255, 255, 0.8);
      }

      .dark {
        --color-text-base: #e0e0e0;
        --color-text-muted: #a0a0a0;
        --color-text-inverted: #333333;
        --color-bg-fill: #0a0a0a;
        --color-bg-card: rgba(255, 255, 255, 0.1);
      }

      html {
        scroll-behavior: smooth;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text",
          "SF Pro Icons", "Helvetica Neue", Helvetica, Arial, sans-serif;
        line-height: 1.47059;
        font-weight: 400;
        letter-spacing: -0.022em;
      }

      .coming-soon-card {
        opacity: 0.6;
        filter: grayscale(40%) saturate(60%);
        pointer-events: none;
      }

      .coming-soon-card::before {
        content: "Coming Soon";
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #2997ff;
        color: white;
        padding: 0.3rem 0.6rem;
        font-size: 0.8rem;
        border-radius: 0.3rem;
        font-weight: bold;
        pointer-events: none;
        opacity: 1;
      }

      .open-source-badge {
        position: absolute;
        top: 0.75rem;
        left: 0.75rem;
        background-color: #22c55e;
        padding: 0.25rem 0.5rem;
        color: white;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        font-weight: bold;
        pointer-events: none;
      }
    </style>
  </head>
  <body class="bg-skin-fill text-skin-base overflow-x-hidden">
    <header
      class="bg-black/80 backdrop-blur-md border-b border-white/10 fixed w-full top-0 z-50"
    >
      <!-- Changed from bg-main-blue -->
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
        <!-- Main nav wrapper -->
        <nav class="flex justify-between items-center">
          <!-- Logo - left side -->
          <a
            href="/"
            class="flex items-center gap-x-3 text-white no-underline"
            id="logo-link"
          >
            <img src="/assets/icon.png" alt="Blankie" class="h-10 w-10" />
            <span class="text-2xl font-semibold tracking-tight">Blankie</span>
          </a>

          <!-- Mobile menu button with hamburger icon -->
          <button
            id="mobile-menu-button"
            class="md:hidden text-white hover:text-primary-blue transition-colors duration-200 p-2"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"
              />
            </svg>
          </button>

          <!-- Desktop Navigation -->
          <div class="hidden md:flex items-center gap-x-10">
            <a
              href="/usage"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >How to Use</a
            >
            <a
              href="/privacy"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >Privacy</a
            >
            <a
              href="/credits"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >Credits</a
            >
            <a
              href="/?section=download"
              class="bg-primary-blue text-white py-2 px-6 rounded-full text-sm font-normal transition-all duration-300 hover:bg-deep-blue no-underline"
              >Download</a
            >
          </div>
        </nav>

        <!-- Mobile Navigation -->
        <div id="mobile-menu" class="hidden md:hidden">
          <div class="flex flex-col gap-y-4 pt-4 pb-6">
            <!-- Added pb-6 for better spacing -->
            <a
              href="/usage"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >How to Use</a
            >
            <a
              href="/privacy"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >Privacy</a
            >
            <a
              href="/credits"
              class="text-white text-sm hover:text-primary-blue transition-colors duration-200"
              >Credits</a
            >
            <a
              href="/?section=download"
              class="bg-primary-blue text-white py-2 px-6 rounded-full text-sm font-normal transition-all duration-300 hover:bg-deep-blue no-underline inline-block text-center"
              >Download</a
            >
          </div>
        </div>
      </div>
    </header>
    {{ content }}

    <footer
      class="bg-gray-100 dark:bg-gray-800 py-10 text-gray-500 dark:text-gray-400 text-center"
    >
      <div
        class="flex flex-col sm:flex-row justify-center gap-x-5 gap-y-2 mb-5"
      >
        <p class="order-first sm:order-last">
          Created by
          <a
            href="https://github.com/codybrom"
            class="hover:text-primary-blue transition-colors duration-300 font-bold underline"
            >Cody Bromley</a
          >
        </p>
        <p class="hidden sm:inline">•</p>
        <p class="order-last sm:order-first">
          Inspired by
          <a
            href="https://apps.gnome.org/Blanket/"
            class="hover:text-primary-blue transition-colors duration-300 font-bold underline"
            >Blanket</a
          >
          for Linux
        </p>
      </div>
      <p class="mb-4">
        <a
          href="https://github.com/codybrom/blankie"
          class="hover:text-primary-blue transition-colors duration-300 underline"
          >Completely free and open source on Github</a
        >
      </p>
      <p>
        © 2025 Cody Bromley. All rights reserved.
        <a
          class="hover:text-primary-blue transition-colors duration-300 underline"
          href="https://opensource.org/license/mit"
          >MIT License</a
        >.
      </p>
    </footer>
    <script>
      // Handle both download and logo links
      // Handle download links
      document
        .querySelectorAll('a[href*="section=download"]')
        .forEach((anchor) => {
          anchor.addEventListener("click", function (e) {
            const href = this.getAttribute("href");
            const isIndexPage =
              window.location.pathname === "/" ||
              window.location.pathname.endsWith("index.html");

            // Always prevent default if we're already on index page
            if (isIndexPage) {
              e.preventDefault();
              const target = document.querySelector("#download");

              if (target) {
                const headerHeight = 80;
                const additionalOffset = 200;
                const totalOffset = headerHeight + additionalOffset;

                const elementPosition = target.getBoundingClientRect().top;
                const offsetPosition =
                  elementPosition + window.pageYOffset - totalOffset;

                window.scrollTo({
                  top: offsetPosition,
                  behavior: "smooth",
                });

                // Update URL without reload
                history.pushState(null, null, href);
              }
              return;
            }
          });
        });

      // Handle logo click
      document
        .getElementById("logo-link")
        .addEventListener("click", function (e) {
          const isIndexPage =
            window.location.pathname === "/" ||
            window.location.pathname.endsWith("index.html");

          if (isIndexPage) {
            e.preventDefault();
            window.scrollTo({
              top: 0,
              behavior: "smooth",
            });
            history.pushState(null, null, "/");
          }
          // If not on index page, let the normal navigation happen
        });

      // Handle initial load with query param
      window.addEventListener("load", function () {
        const params = new URLSearchParams(window.location.search);
        const section = params.get("section");

        if (section === "download") {
          const target = document.querySelector("#download");

          if (target) {
            const headerHeight = 80;
            const additionalOffset = 200;
            const totalOffset = headerHeight + additionalOffset;

            requestAnimationFrame(() => {
              const elementPosition = target.getBoundingClientRect().top;
              const offsetPosition =
                elementPosition + window.pageYOffset - totalOffset;

              window.scrollTo({
                top: offsetPosition,
                behavior: "smooth",
              });
            });
          }
        }
      });

      // Mobile menu functionality
      const mobileMenuButton = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");

      mobileMenuButton.addEventListener("click", () => {
        // Toggle menu visibility
        if (mobileMenu.classList.contains("hidden")) {
          mobileMenu.classList.remove("hidden");
          mobileMenu.classList.add("block");
        } else {
          mobileMenu.classList.add("hidden");
          mobileMenu.classList.remove("block");
        }
      });

      // Close mobile menu when clicking outside
      document.addEventListener("click", (e) => {
        if (
          !mobileMenu.contains(e.target) &&
          !mobileMenuButton.contains(e.target)
        ) {
          mobileMenu.classList.add("hidden");
          mobileMenu.classList.remove("block");
        }
      });

      // Close mobile menu when window is resized to desktop size
      window.addEventListener("resize", () => {
        if (window.innerWidth >= 768) {
          // 768px is the md breakpoint in Tailwind
          mobileMenu.classList.add("hidden");
          mobileMenu.classList.remove("block");
        }
      });

      // Close mobile menu when clicking a link
      mobileMenu.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
          mobileMenu.classList.remove("block");
        });
      });
    </script>
  </body>
</html>
