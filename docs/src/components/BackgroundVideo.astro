---
interface Props {
  videoSrc: string;
  posterSrc?: string;
}

const { videoSrc, posterSrc } = Astro.props;
---

<div class="absolute top-0 left-0 right-0 bottom-0 bg-black opacity-80">
  <video
    id="background-video"
    muted
    playsinline
    aria-hidden="true"
    class="absolute top-1/2 left-1/2 min-w-full min-h-full -translate-x-1/2 -translate-y-1/2 object-cover opacity-40"
    poster={posterSrc}
  >
  </video>
  <span class="sr-only">
    Background video showing gentle ocean waves flowing, creating a calm ambient
    atmosphere.
  </span>
</div>

<script define:vars={{ videoSrc }}>
  document.addEventListener("DOMContentLoaded", () => {
    const video = document.getElementById("background-video");

    // Create an Intersection Observer
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Add source and load video when it comes into view
            if (!video.querySelector("source")) {
              const source = document.createElement("source");
              source.src = videoSrc;
              source.type = "video/mp4";
              video.appendChild(source);
              video.load();
              video.loop = true;
              video.autoplay = true;
              video.play().catch(() => {
                // Handle autoplay policy restrictions silently
              });
            }
            observer.unobserve(entry.target);
          }
        });
      },
      {
        rootMargin: "100px", // Start loading slightly before video is visible
      }
    );

    // Start observing the video
    observer.observe(video);
  });
</script>
